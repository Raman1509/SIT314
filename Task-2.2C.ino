/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled 2"
  https://create.arduino.cc/cloud/things/3f936e9f-0799-4d63-a83f-acd04371ef7a 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float distance_cm;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/
#include "thingProperties.h"

#define TRIG_PIN 3
#define ECHO_PIN 2
#define ALERT_THRESHOLD 107

float distanceMetres;

void setup() {
  Serial.begin(9600);
  delay(1500); // Wait for a Serial Monitor without blocking if none is found

  initProperties();

  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);

  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();

  long duration;
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);
  duration = pulseIn(ECHO_PIN, HIGH);
  float distance_cm = duration * 0.034 / 2;

  // Check if the distance exceeds the threshold
  if (distance_cm > ALERT_THRESHOLD) {
    Serial.println("ALERT: Trash bin is almost full!");
    // Add any additional actions you want to perform when the threshold is exceeded
  }

  // Update the distance property with the measured value in centimeters
  distanceMetres = distance_cm / 100.0; // Convert to meters for the property

  Serial.print("Distance: ");
  Serial.print(distance_cm);
  Serial.println(" cm");

  delay(1000); // Wait for a second before taking the next reading
}

/*
  Since distanceMetres is READ_WRITE variable, onDistanceMetresChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onDistanceMetresChange() {
  // Add your code here to act upon distanceMetres change (if needed)
}
/*
  Since DistanceCm is READ_WRITE variable, onDistanceCmChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onDistanceCmChange()  {
  // Add your code here to act upon DistanceCm change
}
